// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  passwordHash String
  role         UserRole  @default(reader)
  createdAt    DateTime  @default(now())
  articles     Article[]
  comments     Comment[]
  mediaUploads MediaUpload[]
}

model Article {
  id        String     @id @default(cuid())
  title     String
  content   String     @db.Text
  authorId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    PostStatus @default(draft)
  author    User       @relation(fields: [authorId], references: [id])
  comments  Comment[]
  media     MediaUpload[]
}

model Comment {
  id        String   @id @default(cuid())
  text      String   @db.Text
  articleId String
  userId    String
  createdAt DateTime @default(now())
  article   Article  @relation(fields: [articleId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model MediaUpload {
  id        String    @id @default(cuid())
  url       String
  type      MediaType
  articleId String?
  userId    String
  createdAt DateTime  @default(now())
  article   Article?  @relation(fields: [articleId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum UserRole {
  admin
  writer
  reader
}

enum PostStatus {
  draft
  published
}

enum MediaType {
  image
  graph
}
